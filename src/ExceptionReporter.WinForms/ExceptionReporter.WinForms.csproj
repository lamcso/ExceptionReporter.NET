<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
	<RootNamespace>ExceptionReporting</RootNamespace>
	<AssemblyName>ExceptionReporter.WinForms</AssemblyName>
	<PackageId>ExceptionReporter</PackageId>
	<GenerateDocumentationFile>true</GenerateDocumentationFile>
	<TargetFrameworks>net5.0-windows</TargetFrameworks>
	<UseWindowsForms>true</UseWindowsForms>
    <PackageProjectUrl>https://github.com/PauloHMattos/ExceptionReporter.NET</PackageProjectUrl>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Remove="Properties\Resources.en.resx" />
    <EmbeddedResource Remove="Properties\Resources.ru.resx" />
  </ItemGroup>
    <ItemGroup>
    <EmbeddedResource Include="Properties\Resources.en.resx">
      <SubType>Designer</SubType>
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
    <EmbeddedResource Include="Properties\Resources.ru.resx">
      <SubType>Designer</SubType>
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
  </ItemGroup>
  <PropertyGroup>
    <Authors>Peter van der Woude, Simon Cropp</Authors>
    <Description>ExceptionReporter is a .NET UserControl/Dialog that gathers detailed information on an Exception and the application/system running it. It allows the user to copy, save or email a report to the developer</Description>
    <Copyright></Copyright>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <RepositoryUrl>https://github.com/PauloHMattos/ExceptionReporter.NET</RepositoryUrl>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild>
    <PackageTags>exception,error, reporting, reporter</PackageTags>
    <PackageReleaseNotes>Functional:
- IViewMaker.ShowError method dropped the 2nd argument `description` - this is now taken from localized resources. Technically, a breaking change, this will only affect users who used the API to swap the default view with their own - this feature was more of a novelty, I doubt anyone uses it.
- ExceptionReportInfo property `BackgroundColor` is now a hex color code string, not a `System.Drawing.Color` object. Technically, a breaking change, this will only affect users who custom set a background color
- Saving zip file now sets the file extension of the template type it is using (ie markdown/txt/html)
Dependencies Updated:
- DotNetZip from 1.11 to 1.15
- Simple-MAPI.NET 1.1 to 1.2</PackageReleaseNotes>
  </PropertyGroup>
  <ItemGroup>
    <Compile Update="C:\code\ExceptionReporter.NET\ExceptionReporter.Shared\Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Properties\Resources.Designer.cs">
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <SubType>Designer</SubType>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ExceptionReporter.Shared\ExceptionReporter.Shared.csproj" />
  </ItemGroup>
</Project>